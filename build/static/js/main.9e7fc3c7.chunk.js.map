{"version":3,"sources":["spacemountain.jpg","components/Home.js","client.js","dravania.jpeg","components/About.js","components/SinglePost.js","components/Post.js","components/Project.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","src","image","alt","className","sanityClient","projectId","dataset","builder","imageUrlBuilder","About","source","useState","author","setAuthor","useEffect","fetch","then","data","catch","console","error","dravania","authorImage","url","name","blocks","bio","serializers","marks","link","children","mark","blank","href","target","rel","SinglePost","singlePost","setSinglePost","slug","useParams","title","mainImage","asset","style","height","body","imageOptions","w","h","fit","Post","postData","setPost","map","post","index","to","current","Project","projectData","setProjectData","project","Date","date","toLocaleDateString","projectType","description","role","aria-label","NavBar","exact","activeClassName","fgColor","width","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e7fc3c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spacemountain.4c6a0be2.jpg\";","import React from 'react';\nimport image from \"../../src/spacemountain.jpg\";\n\nexport default function Home() {\n  return (\n    <main>\n      <img \n        src={image} \n        alt=\"Mountain scene with starry sky\" \n        className=\"absolute object-cover w-full h-full\"\n      />\n      <section className=\"relative flex justify-center min-h-screen pt-12 lg:pt-64 px-8\">\n        <h1 \n          className=\"text-6xl text-blue-100 font-bold ubuntu leading-none lg:leading-snug home-name\">\n          Hello World. I'm Zach.\n        </h1>\n      </section>\n    </main>\n  )\n}","import sanityClient from '@sanity/client'\n\nexport default sanityClient({\n  projectId: \"w5oew6cm\",\n  dataset: \"production\"\n})","export default __webpack_public_path__ + \"static/media/dravania.49e525c0.jpeg\";","import React, { useEffect, useState } from \"react\";\nimport sanityClient from \"../client\";\nimport dravania from \"../dravania.jpeg\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function About() {\n  const [author, setAuthor] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"author\"]{\n      name,\n      bio,\n      \"authorImage\": image.asset->url\n    }`\n      )\n      .then((data) => setAuthor(data[0]))\n      .catch(console.error);\n  });\n\n  if (!author) return <div>Loading...</div>;\n\n  return (\n    <main className=\"relative\">\n      <img\n        src={dravania}\n        alt=\"Artwork of abstract city in sky from Final Fantasy 14\"\n        className=\"absolute w-full\"\n      />\n      <div className=\"p-10 lg:pt-48 container mx-auto relative\">\n        <section className=\"bg-blue-800 rounded-lg shadow-2xl lg:flex p-10\">\n          <img\n            src={urlFor(author.authorImage).url()}\n            className=\"rounded w-32 h-32 lg:w-64 lg:h-64 mr-8\"\n            alt={author.name}\n          />\n          <div className=\"text-lg flex flex-col justify-center\">\n            <h1 className=\"cursive text-5xl text-blue-400 mb-4\">\n              Hey there. I'm{\" \"}\n              <span className=\"text-blue-200\">{author.name}:</span>\n            </h1>\n            <div className=\"prose lg:prose-xl text-white\">\n              <BlockContent\n                blocks={author.bio}\n                projectId=\"w5oew6cm\"\n                dataset=\"production\"\n              />\n            </div>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nconst serializers = {\n  marks: {\n    link: ({ children, mark }) =>\n      mark.blank ? (\n        <u><a href={mark.href} target=\"_blank\" rel=\"noopener noreferrer\">\n          {children}\n        </a></u>\n      ) : (\n        <u><a href={mark.href}>{children}</a></u>\n      ),\n  },\n};\n\nexport default function SinglePost() {\n  const [singlePost, setSinglePost] = useState(null);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n      title,\n      _id,\n      slug,\n      mainImage{\n        asset->{\n          _id,\n          url\n        }\n      },\n      body,\n      \"name\": author->name,\n      \"authorImage\": author->image\n    }`\n      )\n      .then((data) => setSinglePost(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n  if (!singlePost) return <div>Loading...</div>;\n\n  return (\n    <main className=\"bg-gray-200 min-h-screen p-12\">\n      <article className=\"container shadow-lg mx-auto bg-blue-100 rounded-lg\">\n        <header className=\"relative\">\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\n            <div className=\"bg-white bg-opacity-75 rounded p-12\">\n              <h1 className=\"cursive text-3xl lg:text-6xl mb-4 text-center\">\n                {singlePost.title}\n              </h1>\n              <div className=\"flex justify-center text-gray-800\">\n                <img\n                  src={urlFor(singlePost.authorImage).url()}\n                  alt={singlePost.name}\n                  className=\"w-10 h-10 rounded-full\"\n                />\n                <p className=\"cursive flex items-center pl-2 text-2xl\">\n                  {singlePost.name}\n                </p>\n              </div>\n            </div>\n          </div>\n          <img\n            src={singlePost.mainImage.asset.url}\n            alt={singlePost.title}\n            className=\"w-full object-cover rounded-t\"\n            style={{ height: \"450px\" }}\n          />\n        </header>\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\n          <BlockContent\n            blocks={singlePost.body}\n            projectId=\"w5oew6cm\"\n            dataset=\"production\"\n            imageOptions={{ w: 700, h: 500, fit: \"max\" }}\n            serializers={serializers}\n          />\n        </div>\n      </article>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\n\nexport default function Post() {\n  const [postData, setPost] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"post\"]{\n        title,\n        slug,\n        mainImage{\n          asset->{\n            _id,\n            url\n          },\n          alt\n        }\n      }`\n      )\n      .then((data) => setPost(data))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <main className=\"bg-blue-100 min-h-screen p-12\">\n      <section className=\"container mx-auto\">\n        <h1 className=\"text-5xl flex justify-center cursive\">\n          Blog Posts Page\n        </h1>\n        <h2 className=\"text-lg text-gray-600 flex justify-center mb-12\">\n          Little blurbs about this or that\n        </h2>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {postData &&\n            postData.map((post, index) => (\n              <article key={index}>\n                <Link to={\"/post/\" + post.slug.current} key={post.slug.current}>\n                  <span\n                    className=\"block h-64 relative rounded shadow leading-snug bg-white border-l-8 border-indigo-400\"\n                    key={index}\n                  >\n                    <img\n                      src={post.mainImage.asset.url}\n                      alt={post.mainImage.alt}\n                      className=\"w-full h-full rounded-r object-cover absolute\"\n                    />\n                    <span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\n                      <h3 className=\"text-gray-800 text-lg font-bold px-3 py-4 bg-blue-700 text-blue-100 bg-opacity-75 rounded\">\n                        {post.title}\n                      </h3>\n                    </span>\n                  </span>\n                </Link>\n              </article>\n            ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport sanityClient from \"../client.js\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function Project() {\n  const [projectData, setProjectData] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"project\"]{\n      title,\n      date,\n      mainImage{\n        asset->{\n          _id,\n          url\n        }\n      },\n      description,\n      projectType,\n      link,\n      tags\n    }`\n      )\n      .then((data) => setProjectData(data))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <main className=\"bg-blue-100 min-h-screen p-12\">\n      <section className=\"container mx-auto\">\n        <h1 className=\"text-5xl flex justify-center cursive\">My Projects</h1>\n        <h2 className=\"text-lg text-gray-600 flex justify-center mb-12\">\n          Personal, school, and everything in-between\n        </h2>\n        <section className=\"grid grid-cols-2 gap-8\">\n          {projectData &&\n            projectData.map((project, index) => (\n              <article className=\"relative rounded-lg shadow-xl bg-white p-12 bg-project\" key={index}>\n                <img\n                  src={urlFor(project.mainImage).url()}\n                  alt={project.title}\n                  className=\"\"\n                />\n                <h3 className=\"text-gray-800 text-3xl font-bold mb-2 mt-2 hover:text-red-700\">\n                  <a\n                    href={project.link}\n                    alt={project.title}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {project.title}\n                  </a>\n                </h3>\n                <div className=\"text-gray-500 text-xs space-x-4\">\n                  <span>\n                    <strong className=\"font-bold\">Finished on </strong>:{\" \"}\n                    {new Date(project.date).toLocaleDateString()}\n                  </span>\n                  <span>\n                    <strong className=\"font-bold\">Type</strong>:{\" \"}\n                    {project.projectType}\n                  </span>\n                  <p className=\"my-6 text-lg text-gray-700 leading-relaxed\">\n                    {project.description}\n                  </p>\n                  <a\n                    href={project.link}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    className=\"text-blue-500 font-bold hover:underline hover:text-blue-400 text-xl\"\n                  >\n                    View the Project{\" \"}\n                    <span role=\"img\" aria-label=\"right pointer\">\n                      👉\n                    </span>\n                  </a>\n                </div>\n              </article>\n            ))}\n        </section>\n      </section>\n    </main>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { SocialIcon } from 'react-social-icons';\n\nexport default function NavBar() {\n  return (\n    <header className=\"bg-gray-700\">\n      <div className=\"container mx-auto flex justify-between\">\n        <nav className=\"flex\">\n          <NavLink \n            to='/' \n            exact\n            activeClassName=\"text-white\"\n            className=\"inflex-flex items-center py-8 px-3 mr-4 text-blue-300 hover:text-blue-500 text-4xl font-bold cursive tracking-widest\"\n          >\n            Zach Johnson\n          </NavLink>\n          <NavLink \n            to='/post'\n            className=\"inflex-flex items-center py-4 px-3 my-6 rounded text-blue-300 hover:text-blue-500\"\n            activeClassName=\"text-blue-100 bg-indigo-600\"\n          >\n            Blog Posts\n          </NavLink>\n          <NavLink \n            to='/project'\n            className=\"inflex-flex items-center py-4 px-3 my-6 rounded text-blue-300 hover:text-blue-500\"\n            activeClassName=\"text-blue-100 bg-indigo-600\"\n          >\n            Projects\n          </NavLink>\n          <NavLink \n            to='/about'\n            className=\"inflex-flex items-center py-4 px-3 my-6 rounded text-blue-300 hover:text-blue-500\"\n            activeClassName=\"text-blue-100 bg-indigo-600\"\n          >\n            About Me\n          </NavLink>\n        </nav>\n        <div className=\"inline-flex py-3 px-3 my-6\">\n          <SocialIcon url=\"https://www.linkedin.com/in/zachjjohns/\" className=\"mr-4\" target=\"_blank\" fgColor=\"#fff\" style={{ height: 35, width: 35}}/>\n          <SocialIcon url=\"https://github.com/zachjjohns\" className=\"mr-4\" target=\"_blank\" fgColor=\"#fff\" style={{ height: 35, width: 35}}/>\n        </div>\n      </div>\n    </header>\n  )\n}","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport SinglePost from './components/SinglePost';\nimport Post from './components/Post';\nimport Project from './components/Project';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <NavBar />\n      <Switch>\n        <Route component={Home} path='/' exact />\n        <Route component={About} path='/about' />\n        <Route component={SinglePost} path='/post/:slug' />\n        <Route component={Post} path='/post' />\n        <Route component={Project} path='/project' />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}